{
	"info": {
		"_postman_id": "a9edaa41-79a9-40ab-b467-dd901f9ff6c1",
		"name": "Homework7",
		"schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json",
		"_exporter_id": "15158303"
	},
	"item": [
		{
			"name": "RegisterUser",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Пользователь успешно зарегистрирован\", function () {\r",
							"    pm.response.to.have.status(200); \r",
							"    console.log(\"Response body: \", pm.response.json())\r",
							"});"
						],
						"type": "text/javascript",
						"packages": {}
					}
				}
			],
			"request": {
				"method": "POST",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "{\r\n    \"firstname\":\"Liza\",\r\n    \"lastname\":\"Maistrava\",\r\n    \"username\":\"emaistrav111a@email.com\",\r\n    \"email\":\"emaistrav111a@email.com\",\r\n    \"password\":\"12345678\"\r\n}",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "http://arch.homework/register",
					"protocol": "http",
					"host": [
						"arch",
						"homework"
					],
					"path": [
						"register"
					]
				}
			},
			"response": []
		},
		{
			"name": "LoginUser",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Пользователь успешно зашел\", function () {\r",
							"    pm.response.to.have.status(200); \r",
							"    const jsonData = pm.response.json();\r",
							"    pm.environment.set(\"user1Token\", jsonData.token); \r",
							"    console.log(\"Response body: \", jsonData)\r",
							"});\r",
							""
						],
						"type": "text/javascript",
						"packages": {}
					}
				}
			],
			"request": {
				"method": "POST",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "{\r\n    \"username\":\"emaistrav111a@email.com\",\r\n    \"password\":\"12345678\"\r\n}",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "http://arch.homework/login",
					"protocol": "http",
					"host": [
						"arch",
						"homework"
					],
					"path": [
						"login"
					]
				}
			},
			"response": []
		},
		{
			"name": "GetProfile",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Данные профиля пользователя\", function () {\r",
							"    pm.response.to.have.status(200);\r",
							"    const jsonData = pm.response.json();\r",
							"    pm.expect(jsonData.firstName).to.eql(\"Liza\");\r",
							"    pm.expect(jsonData.lastName).to.eql(\"Maistrava\");\r",
							"    console.log(\"Response body: \", jsonData)\r",
							"});\r",
							""
						],
						"type": "text/javascript",
						"packages": {}
					}
				}
			],
			"request": {
				"method": "GET",
				"header": [
					{
						"key": "Authorization",
						"value": "Bearer {{user1Token}}",
						"type": "text"
					}
				],
				"url": {
					"raw": "http://arch.homework/account/profile",
					"protocol": "http",
					"host": [
						"arch",
						"homework"
					],
					"path": [
						"account",
						"profile"
					]
				}
			},
			"response": []
		},
		{
			"name": "Deposit",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Пополнение баланса пользователя на 100р\", function () {\r",
							"    pm.response.to.have.status(200);\r",
							"    const jsonData = pm.response.json();\r",
							"    pm.expect(jsonData.balance).to.eql(100.0);\r",
							"    console.log(\"Response body: \", jsonData)\r",
							"});\r",
							""
						],
						"type": "text/javascript",
						"packages": {}
					}
				}
			],
			"request": {
				"method": "POST",
				"header": [
					{
						"key": "Authorization",
						"value": "Bearer {{user1Token}}",
						"type": "text"
					}
				],
				"body": {
					"mode": "raw",
					"raw": "{\r\n    \"Amount\": 100.0\r\n}",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "http://arch.homework/payment/deposit?Authorization=Bearer {{user1Token}}",
					"protocol": "http",
					"host": [
						"arch",
						"homework"
					],
					"path": [
						"payment",
						"deposit"
					],
					"query": [
						{
							"key": "Authorization",
							"value": "Bearer {{user1Token}}"
						}
					]
				}
			},
			"response": []
		},
		{
			"name": "GetPaymentAccount",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Данные аккаунта для оплаты пользователя\", function () {\r",
							"    pm.response.to.have.status(200);\r",
							"    const jsonData = pm.response.json();\r",
							"    pm.expect(jsonData.balance).to.eql(100.0);\r",
							"    console.log(\"Response body: \",jsonData)\r",
							"});\r",
							""
						],
						"type": "text/javascript",
						"packages": {}
					}
				}
			],
			"request": {
				"method": "GET",
				"header": [
					{
						"key": "Authorization",
						"value": "Bearer {{user1Token}}",
						"type": "text"
					}
				],
				"url": {
					"raw": "http://arch.homework/payment/account?Authorization=Bearer {{user1Token}}",
					"protocol": "http",
					"host": [
						"arch",
						"homework"
					],
					"path": [
						"payment",
						"account"
					],
					"query": [
						{
							"key": "Authorization",
							"value": "Bearer {{user1Token}}"
						}
					]
				}
			},
			"response": []
		},
		{
			"name": "CreateOrder",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Сделать заказ на который хватает денег\", function () {\r",
							"    pm.response.to.have.status(200);\r",
							"    console.log(\"Response body: \", pm.response.json())\r",
							"});\r",
							""
						],
						"type": "text/javascript",
						"packages": {}
					}
				}
			],
			"request": {
				"method": "POST",
				"header": [
					{
						"key": "Authorization",
						"value": "Bearer {{user1Token}}",
						"type": "text"
					}
				],
				"body": {
					"mode": "raw",
					"raw": "{\r\n    \"orderAmount\": 50.0,\r\n    \"serviceName\": \"Консультация врача\"\r\n}",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "http://arch.homework/booking/order",
					"protocol": "http",
					"host": [
						"arch",
						"homework"
					],
					"path": [
						"booking",
						"order"
					]
				}
			},
			"response": []
		},
		{
			"name": "GetPaymentAccountAfterOrder",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Данные аккаунта для оплаты пользователя после оплаты заказа\", function () {\r",
							"    pm.response.to.have.status(200);\r",
							"    const jsonData = pm.response.json();\r",
							"    pm.expect(jsonData.balance).to.eql(50.0);\r",
							"    console.log(\"Response body: \", jsonData)\r",
							"});\r",
							""
						],
						"type": "text/javascript",
						"packages": {}
					}
				}
			],
			"request": {
				"method": "GET",
				"header": [
					{
						"key": "Authorization",
						"value": "Bearer {{user1Token}}",
						"type": "text"
					}
				],
				"url": {
					"raw": "http://arch.homework/payment/account?Authorization=Bearer {{user1Token}}",
					"protocol": "http",
					"host": [
						"arch",
						"homework"
					],
					"path": [
						"payment",
						"account"
					],
					"query": [
						{
							"key": "Authorization",
							"value": "Bearer {{user1Token}}"
						}
					]
				}
			},
			"response": []
		},
		{
			"name": "CreateOrder2",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Сделать заказ на который не хватает денег\", function () {\r",
							"    pm.response.to.have.status(400)\r",
							"    console.log(\"Response body: \", pm.response.json())\r",
							"});\r",
							""
						],
						"type": "text/javascript",
						"packages": {}
					}
				}
			],
			"request": {
				"method": "POST",
				"header": [
					{
						"key": "Authorization",
						"value": "Bearer {{user1Token}}",
						"type": "text"
					}
				],
				"body": {
					"mode": "raw",
					"raw": "{\r\n    \"orderAmount\": 80.0,\r\n    \"serviceName\": \"Консультация врача 2\"\r\n}",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "http://arch.homework/booking/order",
					"protocol": "http",
					"host": [
						"arch",
						"homework"
					],
					"path": [
						"booking",
						"order"
					]
				}
			},
			"response": []
		},
		{
			"name": "GetPaymentAccountAtferOrder2",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Данные аккаунта для оплаты пользователя\", function () {\r",
							"    pm.response.to.have.status(200);\r",
							"    const jsonData = pm.response.json();\r",
							"    pm.expect(jsonData.balance).to.eql(50.0);\r",
							"    console.log(\"Response body: \", jsonData)\r",
							"});\r",
							""
						],
						"type": "text/javascript",
						"packages": {}
					}
				}
			],
			"request": {
				"method": "GET",
				"header": [
					{
						"key": "Authorization",
						"value": "Bearer {{user1Token}}",
						"type": "text"
					}
				],
				"url": {
					"raw": "http://arch.homework/payment/account?Authorization=Bearer {{user1Token}}",
					"protocol": "http",
					"host": [
						"arch",
						"homework"
					],
					"path": [
						"payment",
						"account"
					],
					"query": [
						{
							"key": "Authorization",
							"value": "Bearer {{user1Token}}"
						}
					]
				}
			},
			"response": []
		},
		{
			"name": "GetUserNotifications",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Данные аккаунта для оплаты пользователя\", function () {\r",
							"    pm.response.to.have.status(200);\r",
							"    console.log(\"Response body: \", pm.response.json())\r",
							"});\r",
							""
						],
						"type": "text/javascript",
						"packages": {}
					}
				}
			],
			"request": {
				"method": "GET",
				"header": [
					{
						"key": "Authorization",
						"value": "Bearer {{user1Token}}",
						"type": "text"
					}
				],
				"url": {
					"raw": "http://arch.homework/notification",
					"protocol": "http",
					"host": [
						"arch",
						"homework"
					],
					"path": [
						"notification"
					]
				}
			},
			"response": []
		}
	]
}